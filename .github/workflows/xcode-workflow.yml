name: Xcode Workflow

on:
  push:
    branches: xcode-workflow
  workflow_dispatch:

env:
  SCHEME: demo-gh-actions-swift
  WORKSPACE: demo-gh-actions-swift.xcodeproj/project.xcworkspace
  ARCHIVE_PATH: build/demo-gh-actions-swift.xcarchive
  EXPORT_PATH: build/demo-gh-actions-swift.ipa
  CONFIGURATION: Release

jobs:
  build:
    name: Build & Test
    runs-on: macos-latest
    env:
      DESTINATION: platform=iOS Simulator,name=iPhone 14,OS=16.2
      SDK: iphoneos
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build (Unsigned)
        run: |
          xcodebuild -workspace $WORKSPACE \
          -scheme $SCHEME \
          -configuration $CONFIGURATION \
          -sdk ${{ env.SDK }} \
          -destination "${{ env.DESTINATION }}" \
          CODE_SIGNING_ALLOWED=NO \
          build
      # - name: Test
      #   run: |
      #     xcodebuild test -workspace $WORKSPACE \
      #     -scheme $SCHEME \
      #     -sdk ${{ env.SDK }} \
      #     -destination "${{ env.DESTINATION }}"
  archive:
    name: Archive
    runs-on: macos-latest
    needs: build
    env:
      DESTINATION: generic/platform=iOS
      SDK: iphoneos
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Archive
        run: |
          xcodebuild archive -workspace $WORKSPACE \
          -scheme $SCHEME \
          -configuration $CONFIGURATION \
          -sdk ${{ env.SDK }} \
          -destination ${{ env.DESTINATION }} \
          -archivePath $ARCHIVE_PATH \
          CODE_SIGNING_ALLOWED=NO
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.DISTRIBUTION_CERT_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Sign Archive
        run: |
          xcodebuild -exportArchive -archivePath $ARCHIVE_PATH \
          -exportPath $EXPORT_PATH \
          -allowProvisioningUpdates
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
